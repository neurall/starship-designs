<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Sign In with LinkedIn</title>
</head>
<body>
    <button id="linkedin-signin">Sign In with LinkedIn</button>
</body>
</html>
<script>
    const clientID = '86kgovwhryi6n4';
    const redirectURI = 'https://starship-designs.com';


document.getElementById('linkedin-signin').addEventListener('click', function() {
    const state = 'RANDOM_STRING'; // Generate a random string for state
    const scope = 'r_liteprofile r_emailaddress'; // Set scope as needed

    const linkedInAuthURL = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientID}&redirect_uri=${encodeURIComponent(redirectURI)}&state=${state}&scope=${encodeURIComponent(scope)}`;

    window.location.href = linkedInAuthURL;
});


function fetchAccessToken(code) {

    const clientSecret = 'YOUR_CLIENT_SECRET'; // Be cautious with client secret in frontend code

    const tokenURL = 'https://www.linkedin.com/oauth/v2/accessToken';

    fetch(tokenURL, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: `grant_type=authorization_code&code=${code}&redirect_uri=${encodeURIComponent(redirectURI)}&client_id=${clientID}&client_secret=${clientSecret}`
    })
    .then(response => response.json())
    .then(data => {
        // Handle access token, use it to fetch user data from LinkedIn API
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

window.onload = function() {
    const urlParams = new URLSearchParams(window.location.search);
    const code = urlParams.get('code');
    const state = urlParams.get('state');

    // Check if the code and state exist
    if (code && state) {
        // Verify the state matches the one you sent to prevent CSRF attacks
        // Assuming you have a way to retrieve the original state you sent
        const originalState = getOriginalState(); // Implement this function

        if (state === RANDOM_STRING) {
            fetchAccessToken(code);
        } else {
            console.error('State mismatch. Possible CSRF attack.');
        }
    }
}
</script>